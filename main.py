import telebot # —Å–∞–º–∞ –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ telebot
import time # –Ω–µ–æ–±—Ö–æ–¥–∏–º –¥–ª—è c—Ä–æ–∫–∞ /mute –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ä–∞–∑–º—É—Ç–∞ –ø–æ—Å–ª–µ —Å—Ä–æ–∫–∞ –º—É—Ç–∞
from random import choice

from telebot import custom_filters
from telebot import types

from config import token
from text_analysis import recognition_of_insults, get_emotion


import uuid
import os

from functions import convert_text_to_voice, recognise, translate_from_en_to_ru, detect


bot = telebot.TeleBot(token) # –≤ TOKEN –º—ã –≤–≤–æ–¥–∏–º –Ω–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ —Å–∞–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–π —Ç–æ–∫–µ–Ω.




@bot.chat_join_request_handler()
def make_some(message: telebot.types.ChatJoinRequest):
    bot.send_message(message.chat.id, 'I accepted a new user!')
    bot.approve_chat_join_request(message.chat.id, message.from_user.id)

# analys COMMANDS -------------------------------------------------------------------------------------------------------------------------------





@bot.message_handler(commands=['start'])
def start(message):
    bot.reply_to(message, "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —á–∞—Ç–æ–º. –ù–∞–ø–∏—à–∏ /help, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å, —á—Ç–æ —è —É–º–µ—é.")



@bot.message_handler(is_admin=True, commands=['kick'])
def kick_user(message):
    if message.reply_to_message:
        chat_id = message.chat.id
        user_id = message.reply_to_message.from_user.id
        user_status = bot.get_chat_member(chat_id, user_id).status
        if user_status == 'administrator' or user_status == 'creator':
            bot.reply_to(message, "–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –∫–∏–∫–Ω—É—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")
        else:
            try:
                bot.ban_chat_member(chat_id, user_id)
                bot.reply_to(message, f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{message.reply_to_message.from_user.username} –±—ã–ª –∫–∏–∫–Ω—É—Ç.")
            except:
                print("–Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞")
                bot.reply_to(message, f"–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫")
            
    else:
        bot.reply_to(message, "–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∫–∏–∫–Ω—É—Ç—å.")



@bot.message_handler(commands=['kick'])
def kick_user(message):
    bot.reply_to(message, f"–•–∞-—Ö–∞ —Ç–µ–±–µ –Ω–µ–ª—å–∑—è –Ω–∏–∫–æ–≥–æ –∫–∏–∫–∞—Ç—å")



@bot.message_handler(commands=['voice'])
def convert_text(message):
    if message.reply_to_message:
        try:
            path = convert_text_to_voice(message.reply_to_message.text)
            bot.send_chat_action(message.chat.id, 'record_voice', timeout=10)
            bot.send_voice(message.chat.id, open(f'{path}', 'rb'))
            os.remove(path=path) 
        except:
            bot.send_voice(message.chat.id, open('voices/sorry.mp3', 'rb'))

@bot.message_handler(commands=['emotion'])
def get_emotion_from_mes(message):
    if message.reply_to_message:
        print("cool")
        mes = get_emotion(message.text)
        bot.reply_to(message, f"{message.from_user.first_name} {mes}")
    else:
        print("HHhhhhhhhhhhhh")
        bot.reply_to(message, "–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∫–∏–∫–Ω—É—Ç—å.")





# analys TEXT FILTER ---------------------------------------------------------------------------------------------------------------------




@bot.message_handler(text_startswith=('–ü—Ä–∏–≤',"–ø—Ä–∏–≤", "—Ö–∞–π","–•–∞–π", "–ë–æ—Ç", "–±–æ—Ç"))
def text_filter(message):
    bot.reply_to(message, "Hi, {name}!".format(name=message.from_user.first_name))

@bot.message_handler(text_startswith=('–ê—Ö–∞—Ö',"–∞—Ö–∞—Ö", "—Ö–∞—Ö–∞", "–•–∞—Ö", "–ª–æ–ª", "—Ä–∂—É", "–æ—Ä—É"))
def text_filter(message):
    bot.reply_to(message, f"@{message.from_user.username} —Å–º–µ—à–Ω–æ —Ç–µ–±–µ, –¥–∞????")
    bot.reply_to(message, "üòÇ")
 
@bot.message_handler(text_startswith=("–ö–∞–∫ –¥–µ–ª", "–∫–∞–∫ –¥–µ–ª","–ö–∞–∫ —Ç—ã", "–∫–∞–∫ —Ç—ã","—Ç—ã –∫–∞–∫", "–¢—ã –∫–∞–∫" ))
def text_filter(message):
    mood = choice(['–•–æ—Ä–æ—à–æ, —Ç—ã –∫–∞–∫?', "–û—Ç—Å—Ç–∞—Ç—å, –º–Ω–µ –ø–ª–æ—Ö–æ", "–Ø —Ç–∞–∫ —Å—á–∞—Å—Ç–ª–∏–≤! –Ω–∞–¥–µ—é—Å—å —Ç—ã —Ç–æ–∂–µ", "–ù–∞ —É–ª–∏—Ü–µ –æ—Å–µ–Ω—å, –Ω–∞ –¥—É—à–µ –ø–µ—á–∞–ª—å, –º–æ–∂–µ—Ç –ø–æ–ø—å–µ–º —á–∞–π?"])
    bot.reply_to(message, f"{mood}")

@bot.message_handler(text_startswith=("–ß–î", "—á–¥","—á—Ç–æ –¥–µ–ª", "—á–µ –¥–µ–ª","–ß—Ç–æ –¥–µ–ª", "–ß–µ –¥–µ–ª" ))
def text_filter(message):
    mood = choice([
        "–Ø —Ä–∞–±–æ—Ç–∞—é –Ω–∞–¥ —Å–≤–æ–∏–º –ø—Ä–æ–µ–∫—Ç–æ–º",
        "–ü–ª–∞–Ω–∏—Ä—É—é —Å–≤–æ–π –¥–µ–Ω—å",
        "–ò–∑—É—á–∞—é —á—Ç–æ-—Ç–æ –Ω–æ–≤–æ–µ.",
        "–û—Ç–¥—ã—Ö–∞—é –∏ —Ä–∞–∑–≤–ª–µ–∫–∞—é—Å—å.",
        "–í—Å—Ç—Ä–µ—á–∞—é—Å—å —Å –¥—Ä—É–∑—å—è–º–∏",
        "–ó–∞–Ω–∏–º–∞—é—Å—å —Å–ø–æ—Ä—Ç–æ–º",
        "–°–º–æ—Ç—Ä—é —Ñ–∏–ª—å–º—ã",
        "–ò–≥—Ä–∞—é –≤ –Ω–∞—Å—Ç–æ–ª—å–Ω—ã–µ –∏–≥—Ä—ã.",
        "–ü—É—Ç–µ—à–µ—Å—Ç–≤—É—é",
        "–†–∞–±–æ—Ç–∞—é –Ω–∞–¥ —Å–∞–º–æ—Ä–∞–∑–≤–∏—Ç–∏–µ–º –∏ –ª–∏—á–Ω—ã–º —Ä–æ—Å—Ç–æ–º."
    ])
    bot.reply_to(message, f"{mood}")






# analys CONTENT TYPE ---------------------------------------------------------------------------------------------------------------------


@bot.message_handler(content_types=['voice'])
def voice_processing(message):
    filename = str(uuid.uuid4())
    file_name_full="./voice/"+filename+".ogg"
    file_name_full_converted="./ready/"+filename+".wav"

    file_info = bot.get_file(message.voice.file_id)

    downloaded_file = bot.download_file(file_info.file_path)

    with open(file_name_full, 'wb') as new_file:
        new_file.write(downloaded_file)
    os.system("ffmpeg -i "+file_name_full+"  "+file_name_full_converted)
    text=recognise(file_name_full_converted)
    bot.reply_to(message, text)
    os.remove(file_name_full)
    os.remove(file_name_full_converted)



@bot.message_handler(content_types=['photo'])
def photo_detection(message):
    file_id = message.photo[-1].file_id
    file_info = bot.get_file(file_id)
    downloaded_file = bot.download_file(file_info.file_path)
    path = "photos/"+str(uuid.uuid4()) +'.jpg'

    with open(path, 'wb') as new_file:
        new_file.write(downloaded_file)
    names, percent = detect(path)
    names = list(map(lambda name: translate_from_en_to_ru(name),names))
    
    bot.reply_to(message, f"–Ø –¥—É–º–∞—é, —á—Ç–æ —Ç—É—Ç {names[0]} —Å –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å {percent}%")
    
    bot.send_message(message.chat.id, f"–ù–æ —Ç–∞–∫–∂–µ –Ω–∞ —Ñ–æ—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å: {names[1]},{names[2]} –∏–ª–∏ {names[3]}")
    os.remove(path)

# analys FUNCTIONS ---------------------------------------------------------------------------------------------------------------------



# filter on a specific message
@bot.message_handler(func=lambda message: "–±–æ—Ç" in message.text.lower() )
def command_text_hi(m):
    bot.reply_to(m, "–û —Ç—ã –æ–±–æ –º–Ω–µ?)))")





# analys ANOTHER MESSAGES ---------------------------------------------------------------------------------------------------------------------



@bot.message_handler(func=lambda message: True)
def handle_message(message):
    # –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã—Ö —Å–ª–æ–≤
    if recognition_of_insults(message.text):
        voice = choice(['insult.m4a',"ins2.m4a", "ins3.m4a" ])
        #bot.reply_to(message, f"@{message.from_user.username} –≠–π ! –¢—ã —á—Ç–æ –ø–æ–ø—É—Ç–∞–ª! –¢—É—Ç –Ω–µ–ª—å–∑—è —Ä—É–≥–∞—Ç—å—Å—è!")
        bot.send_chat_action(message.chat.id, 'record_voice', timeout=6)
        bot.send_voice(message.chat.id, open(f'voices/{voice}', 'rb'))
    else:
        # –µ—Å–ª–∏ –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã—Ö —Å–ª–æ–≤ –Ω–µ—Ç, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–∞–ª—å—à–µ
        print(message.text)









bot.add_custom_filter(custom_filters.IsReplyFilter())
bot.add_custom_filter(custom_filters.ForwardFilter())
bot.add_custom_filter(custom_filters.TextStartsFilter())
bot.infinity_polling(allowed_updates=telebot.util.update_types)
#bot.infinity_polling(none_stop=True)

"""
–ú–µ—Ç–æ–¥ bot.infinity_polling() —è–≤–ª—è–µ—Ç—Å—è –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–æ–π –º–µ—Ç–æ–¥—É bot.polling() –∏ –∑–∞–ø—É—Å–∫–∞–µ—Ç –±–æ—Ç–∞ –≤ —Ä–µ–∂–∏–º–µ –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–≥–æ –æ–∂–∏–¥–∞–Ω–∏—è –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π. –≠—Ç–æ –∑–Ω–∞—á–∏—Ç, —á—Ç–æ –±–æ—Ç –±—É–¥–µ—Ç –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –ø—Ä–æ–≤–µ—Ä—è—Ç—å –Ω–∞–ª–∏—á–∏–µ –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –∏—Ö. –ü–∞—Ä–∞–º–µ—Ç—Ä none_stop=True —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ —Ç–æ, —á—Ç–æ –±–æ—Ç –±—É–¥–µ—Ç –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å —Ä–∞–±–æ—Ç–∞—Ç—å –¥–∞–∂–µ –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–æ–∫ –∏–ª–∏ –ø—Ä–æ–±–ª–µ–º —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º. –≠—Ç–æ –≤–∞–∂–Ω–æ, —á—Ç–æ–±—ã –±–æ—Ç –≤—Å–µ–≥–¥–∞ –±—ã–ª –¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –º–æ–≥ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –∏—Ö –∑–∞–ø—Ä–æ—Å—ã.
"""
